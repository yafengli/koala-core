;;启动集群
./mongod --shardsvr --dbpath /tmp/data/1 --port 10000
./mongod --shardsvr --dbpath /tmp/data/2 --port 10001
./mongod --configsvr --dbpath /tmp/data/config --port 20000
./mongos --configdb localhost:20000

;;连接
./mongo   默认连接到mongos上
MongoDB shell version: 1.2.4-
url: test
connecting to: test
type "help" for help
> show dbs
admin
config
Local

;;增加节点
> use admin
switched to db admin
> db.runCommand( { addshard : "localhost:10000", allowLocal : true } )
{"ok" : 1 , "added" : "localhost:10000"}
> db.runCommand( { addshard : "localhost:10001", allowLocal : true } )
{"ok" : 1 , "added" : "localhost:10001"}
> db.runCommand({listshards:1});   查看shard节点列表
{
        "shards" : [
                {
                        "_id" : "shard0000",
                        "host" : "localhost:10000"
                },
                {
                        "_id" : "shard0001",
                        "host" : "localhost:10001"
                }
        ],
        "ok" : 1
}

;;建自动切片的库
> config=connect("localhost:20000")
connecting to: localhost:20000
localhost:20000
> config=config.getSisterDB("config")
config
>test=db.getSisterDB("test")  
test
> db.runCommand( { enablesharding : "test" } )
{ "ok" : 1 }
> db.printShardingStatus();
--- Sharding Status ---
  sharding version: { "_id" : 1, "version" : 3 }
  shards:
      { "_id" : "shard0000", "host" : "localhost:10000" }
      { "_id" : "shard0001", "host" : "localhost:10001" }
  databases:
        { "_id" : "admin", "partitioned" : false, "primary" : "config" }
        { "_id" : "test", "partitioned" : true, "primary" : "shard0000" }
                test.people chunks:
                        { "name" : { $minKey : 1 } } -->> { "name" : { $maxKey : 1 } } on : shard0000 { "t" : 1000, "i" : 0 }

> 
;;对新建的切片库，建表，插入数据
> use test
switched to db test
> db.createCollection("test")
{ "ok" : 1 }
> show collections
people
system.indexes
test
> db.test.insert({uid:1,un:"test1",age:25})
> db.test.find()
{ "_id" : ObjectId("4c7b85d6d2b4f73a498fac48"), "uid" : 1, "un" : "test1", "age" : 25 }

;;看看test库分配到了哪个shard上
 

;;help
# ./mongo
MongoDB shell version: 1.6.1
connecting to: test
> help
        db.help()                    help on db methods
        db.mycoll.help()             help on collection methods
        rs.help()                    help on replica set methods
        help connect                 connecting to a db help
        help admin                   administrative help
        help misc                    misc things to know

        show dbs                     show database names
        show collections             show collections in current database
        show users                   show users in current database
        show profile                 show most recent system.profile entries with time >= 1ms
        use <db_name>                set current database
        db.foo.find()                list objects in collection foo
        db.foo.find( { a : 1 } )     list objects in foo where a == 1
        it                           result of the last line evaluated; use to further iterate
        exit                         quit the mongo shell
> show dbs
admin
local
test
> db.help()
DB methods:
        db.addUser(username, password[, readOnly=false])
        db.auth(username, password)
        db.cloneDatabase(fromhost)
        db.commandHelp(name) returns the help for the command
        db.copyDatabase(fromdb, todb, fromhost)
        db.createCollection(name, { size : ..., capped : ..., max : ... } )
        db.currentOp() displays the current operation in the db
        db.dropDatabase()
        db.eval(func, args) run code server-side
        db.getCollection(cname) same as db['cname'] or db.cname
        db.getCollectionNames()
        db.getLastError() - just returns the err msg string
        db.getLastErrorObj() - return full status object
        db.getMongo() get the server connection object
        db.getMongo().setSlaveOk() allow this connection to read from the nonmaster member of a replica pair
        db.getName()
        db.getPrevError()
        db.getProfilingLevel()
        db.getReplicationInfo()
        db.getSisterDB(name) get the db at the same server as this one
        db.isMaster() check replica primary status
        db.killOp(opid) kills the current operation in the db
        db.listCommands() lists all the db commands
        db.printCollectionStats()
        db.printReplicationInfo()
        db.printSlaveReplicationInfo()
        db.printShardingStatus()
        db.removeUser(username)
        db.repairDatabase()
        db.resetError()
        db.runCommand(cmdObj) run a database command.  if cmdObj is a string, turns it into { cmdObj : 1 }
        db.serverStatus()
        db.setProfilingLevel(level,<slowms>) 0=off 1=slow 2=all
        db.shutdownServer()
        db.stats()
        db.version() current version of the server
        db.getMongo().setSlaveOk() allow queries on a replication slave server
> 